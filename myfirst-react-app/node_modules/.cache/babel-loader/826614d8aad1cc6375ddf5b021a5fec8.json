{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alexi\\\\Documents\\\\8TH SEMESTER\\\\PROGRAMACION WEB 2\\\\W85B-PROGR.-WEB-II-EJ22\\\\react\\\\myfirst-react-app\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Button } from 'react-bootstrap';\nimport ExampleReactBoostrap from './exampleractboostrap.js';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './miscss.css';\nimport { Container, Form } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst varia = \"Perro\";\n\nclass Timer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      seconds: 0\n    };\n  }\n\n  tick() {\n    this.setState(state => ({\n      seconds: state.seconds + 1\n    }));\n  }\n\n  componentDidMount() {\n    this.interval = setInterval(() => this.tick(), 1000);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Segundos: \", this.state.seconds]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass HelloMessage extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Hola \", this.props.name, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), \"Me siento \", this.props.estadoAnimo, varia]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nfunction Avatar(props) {\n  return /*#__PURE__*/_jsxDEV(\"img\", {\n    className: \"Avatar\",\n    src: props.user.avatarUrl,\n    alt: props.user.name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Avatar;\n\nfunction UserInfo(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"UserInfo\",\n    children: [/*#__PURE__*/_jsxDEV(Avatar, {\n      user: props.user\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"UserInfo-name\",\n      children: props.user.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = UserInfo;\n\nfunction Comment(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Comment\",\n    children: [/*#__PURE__*/_jsxDEV(UserInfo, {\n      user: props.author\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Comment-text\",\n      children: props.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Comment-date\",\n      children: props.date\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n\n_c3 = Comment;\n\nclass TodoApp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [],\n      text: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Tareas pendientes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n        items: this.state.items\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"formBasicToDo\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"\\xBFQu\\xE9 se necesita hacer?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            onChange: this.handleChange,\n            value: this.state.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: this.handleSubmit,\n          children: [\"A\\xF1adir #\", this.state.items.length + 1]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this);\n  }\n\n  handleChange(e) {\n    this.setState({\n      text: e.target.value\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    if (this.state.text.length === 0) {\n      return;\n    }\n\n    const newItem = {\n      text: this.state.text,\n      id: Date.now()\n    };\n    this.setState(state => ({\n      items: state.items.concat(newItem),\n      text: ''\n    }));\n  }\n\n}\n\nclass TodoList extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: this.props.items.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: item.text\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(TodoApp, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 160,\n  columnNumber: 3\n}, this), document.getElementById('root'));\n/*\r\nReactDOM.render(\r\n  <TodoApp />,\r\n  document.getElementById('root')\r\n);*/\n\n/*\r\nReactDOM.render(\r\n  <Timer />,\r\n  document.getElementById('root')\r\n);\r\n\r\nconst comment = {\r\n  date: \"11/11/2022\",\r\n  text: 'I hope you enjoy learning React!',\r\n  author: {\r\n    name: 'Hello Kitty',\r\n    avatarUrl: 'http://placekitten.com/g/64/64'\r\n  }\r\n};\r\n\r\nReactDOM.render(\r\n  <Comment \r\n    date={comment.date}\r\n    text={comment.text}\r\n    author={comment.author}\r\n  />,\r\n  document.getElementById('root')\r\n);\r\n*/\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Avatar\");\n$RefreshReg$(_c2, \"UserInfo\");\n$RefreshReg$(_c3, \"Comment\");","map":{"version":3,"sources":["C:/Users/alexi/Documents/8TH SEMESTER/PROGRAMACION WEB 2/W85B-PROGR.-WEB-II-EJ22/react/myfirst-react-app/src/index.js"],"names":["React","ReactDOM","Button","ExampleReactBoostrap","Container","Form","varia","Timer","Component","constructor","props","state","seconds","tick","setState","componentDidMount","interval","setInterval","render","HelloMessage","name","estadoAnimo","Avatar","user","avatarUrl","UserInfo","Comment","author","text","date","TodoApp","items","handleChange","bind","handleSubmit","length","e","target","value","preventDefault","newItem","id","Date","now","concat","TodoList","map","item","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nimport ExampleReactBoostrap from './exampleractboostrap.js'\r\n\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nimport './miscss.css'\r\nimport { Container, Form } from 'react-bootstrap';\r\n\r\nconst varia = \"Perro\";\r\n\r\nclass Timer extends React.Component{\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {seconds: 0};\r\n  }\r\n\r\n  tick(){\r\n    this.setState(state => ({ seconds : state.seconds + 1}));   \r\n    \r\n  }\r\n\r\n  componentDidMount(){  \r\n    this.interval = \r\n      setInterval(()=>this.tick(), 1000);\r\n\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <div>\r\n        Segundos: {this.state.seconds}\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nclass HelloMessage extends React.Component {\r\n    \r\n  render() {\r\n    return (\r\n      <div>\r\n        Hola {this.props.name}\r\n        <br/>\r\n        Me siento {this.props.estadoAnimo}\r\n        {varia}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction Avatar(props){\r\n  return(\r\n    <img className=\"Avatar\"\r\n          src={props.user.avatarUrl}\r\n          alt={props.user.name}\r\n        />\r\n  );\r\n}\r\n\r\nfunction UserInfo(props){\r\n  return(\r\n    <div className=\"UserInfo\">\r\n        <Avatar user={props.user} />\r\n         <div className=\"UserInfo-name\">\r\n          {props.user.name}\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Comment(props) {\r\n  return (\r\n    <div className=\"Comment\">\r\n      <UserInfo user={props.author}  />\r\n      <div className=\"Comment-text\">\r\n        {props.text}\r\n      </div>\r\n      <div className=\"Comment-date\">\r\n        {props.date }\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nclass TodoApp extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { items: [], text: '' };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n         <h3>Tareas pendientes</h3>\r\n        <TodoList items={this.state.items} />\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <Form.Group className=\"mb-3\" controlId=\"formBasicToDo\">\r\n            <Form.Label>\r\n              ¿Qué se necesita hacer?\r\n            </Form.Label>\r\n            <Form.Control onChange={this.handleChange} value={this.state.text}>\r\n\r\n            </Form.Control>\r\n          </Form.Group>\r\n          <Button variant=\"primary\" onClick={this.handleSubmit}>\r\n            Añadir #{this.state.items.length + 1}\r\n          </Button>\r\n        </Form>\r\n      </Container>\r\n     \r\n      \r\n\r\n    );\r\n  }\r\n\r\n  handleChange(e) {\r\n    this.setState({ text: e.target.value });   \r\n  }\r\n\r\n  handleSubmit(e) {\r\n    e.preventDefault();\r\n    if (this.state.text.length === 0) {\r\n      return;\r\n    }\r\n    const newItem = {\r\n      text: this.state.text,\r\n      id: Date.now()\r\n    };\r\n    this.setState(state => ({\r\n      items: state.items.concat(newItem),\r\n      text: ''\r\n    }));\r\n  \r\n  }\r\n}\r\nclass TodoList extends React.Component {\r\n  render() {\r\n    return (\r\n        \r\n      <ul>\r\n      {this.props.items.map(item => (\r\n        <li key={item.id}>{item.text}</li>\r\n      ))}\r\n    </ul>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nReactDOM.render(\r\n  <TodoApp />,\r\n  document.getElementById('root')\r\n);\r\n\r\n/*\r\nReactDOM.render(\r\n  <TodoApp />,\r\n  document.getElementById('root')\r\n);*/\r\n\r\n\r\n/*\r\nReactDOM.render(\r\n  <Timer />,\r\n  document.getElementById('root')\r\n);\r\n\r\nconst comment = {\r\n  date: \"11/11/2022\",\r\n  text: 'I hope you enjoy learning React!',\r\n  author: {\r\n    name: 'Hello Kitty',\r\n    avatarUrl: 'http://placekitten.com/g/64/64'\r\n  }\r\n};\r\n\r\nReactDOM.render(\r\n  <Comment \r\n    date={comment.date}\r\n    text={comment.text}\r\n    author={comment.author}\r\n  />,\r\n  document.getElementById('root')\r\n);\r\n*/\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n//reportWebVitals();\r\n"]},"metadata":{},"sourceType":"module"}